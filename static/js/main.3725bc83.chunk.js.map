{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Searchbar/ImageGalleryItem.js","components/Searchbar/ImageGallery.js","components/Searchbar/Button.js","components/Searchbar/Modal.js","components/Searchbar/Loader.js","services/hits-api.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","showModal","onClick","src","alt","width","ImageGallery","hits","map","id","Button","fetchHits","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","Spinner","color","height","timeout","searchQuery","currentPage","axios","get","then","response","data","App","isLoading","error","onChangeQuery","options","hitsApi","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","prevProps","shouldRenderLoadMoreButton","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3725bc83.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Searchbar extends Component {\r\n    state = { query: '' };\r\n\r\n    handleChange = e => {\r\n        this.setState({ query: e.currentTarget.value })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        // console.log(this.state);\r\n        this.props.onSubmit(this.state.query)\r\n        this.setState({ query: '' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form\r\n                    className=\"SearchForm\"\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        value={this.state.query}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, showModal }) => {\r\n    return (\r\n        <li\r\n            className=\"ImageGalleryItem\"\r\n            onClick={() => showModal(largeImageURL)}\r\n        >\r\n            <img\r\n                src={webformatURL}\r\n                alt={webformatURL}\r\n                width=\"450\"\r\n                className=\"ImageGalleryItem-image\"\r\n                largeImageURL={largeImageURL}\r\n            // showModal={showModal}\r\n            // showModal={largeImageURL}\r\n            >\r\n            </img>\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    showModal: PropTypes.func.isRequired,\r\n    webformatURL: PropTypes.string,\r\n    largeImageURL: PropTypes.string\r\n};\r\n\r\nexport default ImageGalleryItem","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem'\r\n\r\nconst ImageGallery = ({ hits, showModal }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\"\r\n        // onClick={this.toggleModal}\r\n        >\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    webformatURL={webformatURL}\r\n                    largeImageURL={largeImageURL}\r\n                    showModal={showModal}\r\n                />)\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    showModal: PropTypes.func.isRequired,\r\n    hits: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string,\r\n        largeImageURL: PropTypes.string,\r\n    })),\r\n}\r\n\r\nexport default ImageGallery","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ fetchHits }) => {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"Button\"\r\n            onClick={fetchHits}\r\n        >Load more</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    fetchHits: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button\r\n\r\n","import { Component } from \"react\";\r\nimport { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        // console.log('Modal componentDidMount')\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // console.log('Modal componentWillUnmount')\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            // console.log('down ESC, close modal')\r\n            this.props.onClose()\r\n        }\r\n    }\r\n\r\n    handleBackdropClick = event => {\r\n        // console.log('backdrop')\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { largeImageURL } = this.props\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={largeImageURL} alt={largeImageURL} />\r\n                </div>\r\n            </div>, modalRoot\r\n        )\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    largeImageURL: PropTypes.string\r\n}\r\n\r\nexport default Modal","import React, { Component } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nclass Spinner extends Component {\r\n    //other logic\r\n    render() {\r\n        return (\r\n            <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#3f51b5\"\r\n                height={80}\r\n                width={80}\r\n                timeout={3000} //3 secs\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Spinner","import axios from 'axios';\r\n\r\nconst apiKey = '20282142-3926486b0d0a2f754919f4d11';\r\n\r\nconst fetchHits = ({ searchQuery = '', currentPage = 1 }) => {\r\n    return (axios\r\n        .get(\r\n            `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${apiKey}`,\r\n        ).then(response => response.data.hits)\r\n    )\r\n}\r\n\r\nexport default { fetchHits }","import React, { Component } from 'react';\r\nimport Searchbar from './components/Searchbar/Searchbar'\r\nimport ImageGallery from './components/Searchbar/ImageGallery'\r\nimport Button from './components/Searchbar/Button'\r\nimport Modal from './components/Searchbar/Modal'\r\nimport Spinner from './components/Searchbar/Loader'\r\nimport hitsApi from './services/hits-api'\r\nimport './styles.css'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    hits: [],\r\n    largeImageURL: '',\r\n    currentPage: 1,\r\n    searchQuery: '',\r\n    showModal: false,\r\n    isLoading: false,\r\n    error: null\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchHits()\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      hits: [],\r\n      error: null\r\n    })\r\n  }\r\n\r\n  fetchHits = () => {\r\n    const { currentPage, searchQuery } = this.state\r\n\r\n    const options = { searchQuery, currentPage }\r\n\r\n    this.setState({ isLoading: true })\r\n\r\n    hitsApi.fetchHits(options)\r\n      .then(hits => {\r\n        // console.log(response.data.hits)\r\n        this.setState(prevState => ({\r\n          hits: [...prevState.hits, ...hits],\r\n          currentPage: prevState.currentPage + 1\r\n        }))\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }))\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  toggleModal = (largeImageURL) => {\r\n    // console.log(largeImageURL)\r\n    this.setState(state => ({\r\n      showModal: !state.showModal,\r\n      largeImageURL\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { hits, isLoading, error, showModal, largeImageURL } = this.state\r\n    const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading\r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n\r\n        {error && <h1>Ooooops....ERROR</h1>}\r\n\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n\r\n        <ImageGallery showModal={this.toggleModal} hits={hits} />\r\n\r\n        {/* <button type=\"button\" onClick={this.toggleModal}>Open modal</button> */}\r\n\r\n        {showModal && <Modal onClose={this.toggleModal} largeImageURL={largeImageURL} />}\r\n\r\n        { isLoading && <Spinner />}\r\n\r\n        {shouldRenderLoadMoreButton && <Button fetchHits={this.fetchHits}></Button>}\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}